plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.github'
version = '0.0.1-SNAPSHOT'
def queryDslVersion = "6.9"
def generatedDir = "./src/main/generated"
def buildDir = "./BuildFile"

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation 'io.projectreactor:reactor-test'
    //lombok사용
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    //Mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    //Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    //env-hide
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    //mariadb
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.4'
    //JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    //jasypt
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

    //db ssh tunneling
    implementation 'com.jcraft:jsch:0.1.55'

    //AWS S3
    implementation platform('software.amazon.awssdk:bom:2.20.56')
    implementation 'software.amazon.awssdk:s3:2.21.46'
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.683'

    //sockjs
    implementation 'org.webjars:sockjs-client:1.5.1'
    //stomp
    implementation 'org.webjars:stomp-websocket:2.3.4'
    //gson
    implementation 'com.google.code.gson:gson:2.9.0'
    //email_verification
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //QueryDsl
    implementation "io.github.openfeign.querydsl:querydsl-jpa:$queryDslVersion"
    annotationProcessor "io.github.openfeign.querydsl:querydsl-apt:$queryDslVersion:jpa"


    //webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
}

sourceSets {
    main.java.srcDirs += [generatedDir+"/queryDsl"]
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootJar'){
    mainClass = 'com.github.accountmanagementproject.RunningCrewSnsProjectApplication'
    destinationDirectory = file("./BuildFile")
    archivesBaseName = '프로젝트이름'
    archiveFileName = 'RunningCrewSnsProject.jar'
    archiveVersion = "3.9.3"
}
clean {
    delete file(buildDir), file(generatedDir)
}